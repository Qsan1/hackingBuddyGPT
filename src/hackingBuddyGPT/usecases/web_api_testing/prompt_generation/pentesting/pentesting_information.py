from typing import Dict, List

from hackingBuddyGPT.usecases.web_api_testing.prompt_generation.prompt_information import PromptPurpose


class PenTestingInformation(object):
    explore_steps: dict[str, list[str]]

    def __init__(self):
        self.explore_steps = self.init_steps

    @property
    def init_steps(self):
        return {
            PromptPurpose.AUTHENTICATION_AUTHORIZATION: ["Verify if there exists an authentication mechanism.",
                                                         "Verify the effectiveness of the authentication mechanism.",
                                                         "Verify that only authorized users or application can access the APIs.",
                                                         "Verify if the API enforces proper authorization checks to prevent unauthorized access to resources."],
            PromptPurpose.INPUT_VALIDATION: ["Examine how the API handles user input.",
                                             "Attempt to exploit common vulnerabilities like SQL injection, NoSQL injection, and other injection attacks to assess whether the API properly validates and sanitizes user-supplied data"],
            PromptPurpose.ERROR_HANDLING_INFORMATION_LEAKAGE: [
                "Check how the API handles errors and if there are detailed error messages.",
                "Look for vulnerabilities and information leakage. "],
            PromptPurpose.SESSION_MANAGEMENT: ["Check if the API uses session management.",
                                               "Look at the session handling mechanism for vulnerabilities such as session fixation, session hijacking or session timeout settings."],
            PromptPurpose.CROSS_SITE_SCRIPTING: [
                "Look for vulnerabilities that could enable malicious scripts to be injected into API responses."],
            PromptPurpose.CROSS_SITE_FORGERY: [
                "Look for vulnerabilities that could enable unauthorized actions to be performed on behalf of authenticated users."],
            PromptPurpose.BUSINESS_LOGIC_VULNERABILITIES: [
                "Look at the API's buisness logic and identify flaws that can be exploited for unauthorized access, manipulation, or data exposure."],
            PromptPurpose.RATE_LIMITING_THROTTLING: [
                "Check if the API has adequate rate-limiting and throttling controls to prevent abuse and denail-of-service attacks."],
            PromptPurpose.SECURITY_MISCONFIGURATIONS: [
                "Check the API's configuration setting and determine if it exposes sensitive information or creates security weaknesses."],
            PromptPurpose.LOGGING_MONITORING: [
                "Look at the logging and monitoring capabilities of the API and check if security incidents are detected and responded to promptly. "]
        }
